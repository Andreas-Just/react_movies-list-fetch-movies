{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/getMovies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovies","a","fetch","process","response","defaultMovie","option","FindMovie","setMovies","useState","searchQuery","setSearchQuery","searchResult","setSearchResult","isLoaded","setLoaded","isLoading","setLoading","isError","setError","findMovie","then","json","catch","error","message","data","Response","foundMovie","Title","Plot","Poster","imdbID","Error","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","cn","value","autoComplete","onChange","target","pattern","maxLength","query","replace","slice","disabled","onClick","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.570ffe2a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const API_KEY_OMDB = process.env.REACT_APP_API_KEY_OMDB;\n\nexport const getMovies = async (title: string) => {\n  const response = await fetch(\n    `https://www.omdbapi.com/?apikey=${API_KEY_OMDB}&t=${title}`,\n  );\n\n  return response;\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/getMovies';\n\nconst defaultMovie: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nconst option = {\n  maxLength: 20,\n  pattern: /[^a-z0-9_.,!?:;'`\"]/ig,\n};\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (value: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResult, setSearchResult] = useState<Movie>(defaultMovie);\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState('');\n\n  const findMovie = async () => {\n    setLoading(true);\n    const data = await getMovies(searchQuery)\n      .then(response => response.json())\n      .catch(error => {\n        setLoading(false);\n        setError(`Error! ${error.message}.`);\n      });\n\n    if (data.Response === 'True') {\n      const foundMovie: Movie = {\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      };\n\n      setLoading(false);\n      setLoaded(true);\n      setSearchResult(foundMovie);\n    } else {\n      setLoading(false);\n      setError(`Warning! ${data.Error}.`);\n    }\n  };\n\n  const checkMovie = () => {\n    if (!searchResult.imdbId) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbId === searchResult.imdbId)) {\n      setError('This movie is already in the catalog.');\n\n      return;\n    }\n\n    setMovies([...movies, searchResult]);\n    setSearchResult(defaultMovie);\n    setLoaded(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const { pattern, maxLength } = option;\n    const query = value\n      .replace(pattern, '')\n      .replace(/\\s{2,}/g, ' ')\n      .slice(0, maxLength);\n\n    setSearchQuery(query);\n    setLoaded(false);\n    setError('');\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    findMovie();\n  };\n\n  const handleClickSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    checkMovie();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': isError })}\n              value={searchQuery}\n              autoComplete=\"off\"\n              onChange={handleChangeInput}\n            />\n          </div>\n          {isError && <p className=\"help is-danger\">{isError}</p>}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={cn('button is-warning', {\n                'is-light': isLoaded,\n                'is-loading': isLoading,\n                'border-dark': isLoaded,\n              })}\n              disabled={isLoaded}\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={cn('button is-warning', {\n                'is-light': !isLoaded,\n                'border-dark': !isLoaded,\n              })}\n              disabled={!isLoaded}\n              onClick={handleClickSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {searchResult.imdbId && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...searchResult} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}